/*	general
---------------------------------------------------------------------------------- */



//	key link
https://vuejs.org/v2/guide



//	include js into mounted() {}
require( './bokeh.js' )



/*	new vue project
------------------- */

//	vue cli 3.0
npm install -g @vue/cli
vue create my-project
npm run serve
npm run build

//	place config in package.json

//	normalize
npm install --save normalize.css

//	firebase
npm install firebase --save



/*	things to add
------------------- */



- html lang
- meta - copyright, description, title
- catch all route
- history mode
- robots.txt
	User-agent: *
	Disallow:
- package.json
- google analytics
- manifest shortname, starturl
- rel="noopener" for links
- add img alt
- vue.config.js ( at root )
- no space for self closing <hello/>
- "serve": "vue-cli-service serve --open"



/*	vue config
------------------- */



module.exports = {
	// Project deployment base
	// By default we assume your app will be deployed at the root of a domain,
	// e.g. https://www.my-app.com/
	// If your app is deployed at a sub-path, you will need to specify that
	// sub-path here. For example, if your app is deployed at
	// https://www.foobar.com/my-app/
	// then change this to '/my-app/'
	baseUrl: '/',

	// baseUrl, but for the dev server.
	// you'll only need this if you need to serve your dev server under
	// a specific sub-path in order to work with your dev setup.
	// devBaseUrl: '/',

	// where to output built files
	outputDir: 'dist',

	// where to put static assets (js/css/img/font/...)
	// assetsDir: '',

	// whether to use eslint-loader for lint on save.
	// valid values: true | false | 'error'
	// when set to 'error', lint errors will cause compilation to fail.
	// lintOnSave: true,

	// use the full build with in-browser compiler?
	// https://vuejs.org/v2/guide/installation.html#Runtime-Compiler-vs-Runtime-only
	runtimeCompiler: false,

	// babel-loader skips `node_modules` deps by default.
	// explicitly transpile a dependency with this option.
	transpileDependencies: [/* string or regex */],

	// generate sourceMap for production build?
	productionSourceMap: false,

	// tweak internal webpack configuration.
	// see https://github.com/vuejs/vue-cli/blob/dev/docs/webpack.md
	chainWebpack: () => {},
	configureWebpack: () => {},

	// CSS related options
	css: {
		// extract CSS in components into a single CSS file (only in production)
		// can also be an object of options to pass to extract-text-webpack-plugin
		// extract: true,

		// enable CSS source maps?
		// sourceMap: false,

		// pass custom options to pre-processor loaders. e.g. to pass options to
		// sass-loader, use { sass: { ... } }
		// loaderOptions: {},

		// Enable CSS modules for all css / pre-processor files.
		// This option does not affect *.vue files.
		// modules: false
	},

	// use thread-loader for babel & TS in production build
	// enabled by default if the machine has more than 1 cores
	// parallel: require('os').cpus().length > 1,

	// options for the PWA plugin.
	// see https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-pwa
	pwa: {},

	// configure webpack-dev-server behavior
	devServer: {
		// open: process.platform === 'darwin',
		// disableHostCheck: false,
		// host: '0.0.0.0',
		// port: 8080,
		// https: false,
		// hotOnly: false,
		// See https://github.com/vuejs/vue-cli/blob/dev/docs/cli-service.md#configuring-proxy
		// proxy: null, // string | Object
		// before: app => {}
	},

	// options for 3rd party plugins
	pluginOptions: {
		// ...
	}
}



/*	old settings
------------------- */



//	index.html
size: 2, indentation to tabs, size: 4

<!doctype html>
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<title>Hi üëãüèª, I'm Kelvin Zhao.</title>
<meta name="author" content="Kelvin Zhao | www.kelvinzhao.com">
<meta name="copyright" content="Kelvin Zhao | Copyright (c) 1982-2017">
<meta name="description" content="I design üé®, code üëæ, and sometimes sell myself üôä for money.">
<link rel='icon' type='image/x-icon' href='./static/favicon.ico'>
<link rel="apple-touch-icon" href="./static/icon.png">
//	or <link rel="icon" href="data:;base64,iVBORw0KGgo=">
<!-- google analytics placeholder -->

//	README.md
Hi üëãüèª, I'm Kelvin Zhao. I design üé®, code üëæ, and sometimes sell myself üôä for money.

//	src > App.vue
size: 2, indentation to tabs, size: 4

<template>
	<div id="app">
		<router-view/>
	</div>
</template>



<!---->



<script>
export default {
	name: 'app'
}
</script>



<!---->



<style lang="scss">
@import "./scss/app.scss";
</style>

//	src > main.js
size: 2, indentation to tabs, size: 4

import Vue from 'vue'
import App from './App'
import { store } from './store'
import router from './router'

Vue.config.productionTip = false

new Vue({
	el: '#app',
	store,
	router,
	render: h => h( App )
})

//	src > components > HelloWorld.vue
rename to Index.vue
size: 2, indentation to tabs, size: 4

<template>
	<div></div>
</template>



<!---->



<script>
export default {
	name: 'Index',
	data () {
		return {

		}
	}
}
</script>



<!---->



<style lang="scss" scoped>
</style>

//	src > router > index.js
size: 2, indentation to tabs, size: 4

import Vue from 'vue'
import Router from 'vue-router'
import Index from '@/components/Index'

Vue.use( Router )

export default new Router({
	mode: 'history',
	routes: [
		{
			path: '/',
			name: 'Index',
			component: Index
		},
		{
			path: '*',
			beforeEnter: ( to, from, next ) => {
				next( '/' )
			}
		}
	]
})


//	src > create scss folder + following files

//	_base.scss

/*  base settings
---------------------------------------------------------------------------------- */

html,
body {
	width      : 100vw; // make site fit width
	min-height : 100vh; // make site fill screen // may cause scrollTop bug
	max-width  : 100%; // do not allow x scrolling
	overflow-x : hidden; // able to hide stuff out of screen
	overflow-y : auto; // scrolling auto
	font-size  : 100%; // ~16px
}

html {
	box-sizing : border-box; // width & height to include paddings
	-webkit-overflow-scrolling : touch; // smooth scrolling for iOS
	-webkit-font-smoothing: antialiased; // better font rendering
	-moz-osx-font-smoothing: grayscale; // ^^
}

*,
*::before,
*::after {
	box-sizing     : inherit; // inherit border-box from above
	text-rendering : optimizeLegibility; // make small text readable
}

body {
	cursor      : auto; // reset cursor
	margin      : 0; // tight fit as a default
	padding     : 0; // ^^
	position    : relative; // for child absolutes to align to
	font-style  : normal; // reset font
	font-weight : normal; // ^^
}

a:hover {
	cursor : pointer; // links use pointers
}

img {
	height    : auto; // for responsive images
	max-width : 100%; // ^^

	display        : inline-block; // inline but have width & height
	vertical-align : middle; // line side by side images by middle

	image-rendering        : auto; // better scaling images most browers
	-ms-interpolation-mode : bicubic; // better scaling images IE
}

.map_canvas,
.mqa-display {
	img,
	embed,
	object {
		max-width : none !important; // better google map embed
	}
}

//	_configs.scss

/*  mother of all bases
---------------------------------------------------------------------------------- */
$em    : 16px;
$ratio : 1.618; // golden ratio

/*  device sizes
---------------------------------------------------------------------------------- */
$phone   : 36em; // ~576px
$tablet  : 48em; // ~768px
$desktop : 62em; // ~992px
$xlarge  : 75em; // ~1200px

/*  colors
---------------------------------------------------------------------------------- */
$color-black  : #1e1e1e;
$color-grey   : #6e6e6e;
$color-white  : #fafafa;

$color-red    : #f55555;
$color-orange : #ffb446;
$color-yellow : #fff546;
$color-green  : #a5f06e;
$color-blue   : #4691fa;
$color-purple : #a04bc8;
$color-pink   : #ff96f5;

/*  typography
---------------------------------------------------------------------------------- */
$pri-font  : 'Varela Round';
$pri-link  : 'Varela+Round';
$pri-sizes : '';

$sec-font  : 'Montserrat';
$sec-link  : $sec-font;
$sec-sizes : ':300,400,700';

//	_constants.scss

/*  foundation
---------------------------------------------------------------------------------- */

@import url( 'https://fonts.googleapis.com/css?family=#{$pri-link}|#{$sec-link}#{$sec-sizes}' );

h1 { font-size : #{ power( $ratio, 4 ) }em; }
h2 { font-size : #{ power( $ratio, 3 ) }em; }
h3 { font-size : #{ power( $ratio, 2 ) }em; }
h4 { font-size : #{ power( $ratio, 1 ) }em; }
h5 { font-size : 1em; }
h6 { font-size : #{ power( $ratio, 1 ) - 1 }em; }

h1, h2, h3, h4, h5, h6 {
	line-height: 1.2;
	color: $color-black;
	font-weight: normal; // safari auto bolds h, can cause bugs if custom font has weights in them
	font-family: $pri-font, 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

html {
	font-size: 1em;
	line-height: 1.5;
	color: $color-black;
	font-family: $sec-font, 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

body {
	display: flex;
	align-items: center;
	justify-content: center;
}

a {
	color: $color-orange;
	text-decoration: none;
	transition: all ease 0.25s;
	box-shadow: inset 0 -2px 0px 0px $color-orange;

	&:hover {
		color: $color-yellow;
		box-shadow: inset 0 -2px 0px 0px $color-yellow;
	}
}

/*  constants
---------------------------------------------------------------------------------- */

//	_helpers.scss

/*  functions
---------------------------------------------------------------------------------- */

// strip( 16px ) = 16
@function strip( $num ) {
	@return $num / ( $num * 0 + 1 );
}

// em( 16px ) = 1em
@function em( $pixels, $context: $em ) {
	@return ( $pixels / $context ) * 1em;
}

// power( 2, 2 )
@function power( $num, $power ) {
	$x: 1;
	@if $power > 0 {
		@for $i from 1 through $power {
			$x: $x * $num;
		}
	} @else if $power < 0 {
		@for $i from 1 through $power {
			$x: $x / $num;
		}
	}
	@return $x;
}

/*  mixins
---------------------------------------------------------------------------------- */

// @include align( 50%, 20% )
// 50 50 is default if you @include align()
@mixin align( $x: 50%, $y: 50% ) {
	top       : $y;
	left      : $x;
	position  : absolute;
	transform : translate( -( $x ), -( $y ) );
}

// @include break( $phone, up )
// $phone, $tablet, $desktop, $xlarge or em size, up or down
@mixin break( $size, $dir ) {

	@if $dir == 'up' {
		$dir: min-width;
	} @else if $dir == 'down' {
		$dir: max-width;
		$size: $size - em( 1px );  // -1px to avoid conflict with up
	}

	@media ( $dir: $size ) {
		@content;
	}
}

/*  extends
---------------------------------------------------------------------------------- */

// @extend %clearfix
// % = placeholder class ,if not used, won't be in output css
%clearfix {
	&:after {
		content : '';
		display : table;
		clear   : both;
	}
}

//	app.scss

/*!
	(‚ïØ¬∞‚ñ°¬∞)‚ïØÔ∏µ ‚îª‚îÅ‚îª ¬Ø\_(„ÉÑ)_/¬Ø
	kelvinzhao.com
*/

// dependencies
@import '~normalize.css';

// app structure
@import 'base';
@import 'helpers';
@import 'configs';
@import 'constants';

//	src > new folder - store > index.js

import Vue from 'vue'
import Vuex from 'vuex'

Vue.use( Vuex )

export const store = new Vuex.Store({
	state: {

	},
	getters: {

	},
	mutations: {

	},
	actions: {

	}
})

//	update firebase tools
npm install -g firebase-tools
firebase init

//	firebase.json

{
  "database": {
    "rules": "database.rules.json"
  },
  "hosting": {
    "public": "dist",
    "ignore": [
      "firebase.json",
      "**/.*",
      "**/node_modules/**"
    ],
    "rewrites": [
      {
        "source": "**",
        "destination": "/index.html"
      }
    ],
    "headers": [
      {
        "source": "**/*.@(eot|otf|ttf|ttc|woff|font.css)",
        "headers": [
          {
            "key": "Access-Control-Allow-Origin",
            "value": "*"
          }
        ]
      },
      {
        "source": "**/*.@(js|css)",
        "headers": [
          {
            "key": "Cache-Control",
            "value": "max-age=604800"
          }
        ]
      },
      {
        "source": "**/*.@(jpg|jpeg|gif|png|ico)",
        "headers": [
          {
            "key": "Cache-Control",
            "value": "max-age=604800"
          }
        ]
      }
    ],
    "cleanUrls": true,
    "trailingSlash": false
  }
}

//	src > assets
delete default file/s







/*	vue cli
---------------------------------------------------------------------------------- */



//	to view on mobile in dev mode
//	under config/index.js
host: '0.0.0.0'



//	do not produce source maps
//	under config/index.js
productionSourceMap: false



//	optional gzip true
productionGzip: true
//	then
npm install --save-dev compression-webpack-plugin






