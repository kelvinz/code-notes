/*	general
---------------------------------------------------------------------------------- */



//	prevent double config error
if ( !firebase.apps.length ) {
	firebase.initializeApp( config )
}



//	check if connected
firebase.database().ref().child( '.info/connected' )
.on( 'value', snapshot => {
	if ( snapshot.val() === true ) {
		//	you're connected
	}
})



//	to create an empty node for placeholder
//	add a 0: 0 as a child node
//	it has to have 'content' to exist







/*  authentication
---------------------------------------------------------------------------------- */







/*  database
---------------------------------------------------------------------------------- */







/*  storage
---------------------------------------------------------------------------------- */







/*	hosting
---------------------------------------------------------------------------------- */



//	global install tool
npm install -g firebase-tools

//	inside project folder init firebase hosting
firebase init

//	to deploy
firebase deploy

//	firebase.json
{
  "hosting": {
    "public": "dist",
    "ignore": [
      "firebase.json",
      "**/.*",
      "**/node_modules/**"
    ],
    "rewrites": [
    	{
    		"source": "**",
    		"destination": "/index.html"
    	}
    ],
    "headers": [ {
      "source" : "**/*.@(eot|otf|ttf|ttc|woff|font.css)",
      "headers" : [ {
        "key" : "Access-Control-Allow-Origin",
        "value" : "*"
      } ]
    }, {
      "source" : "**/*.@(js|css)",
      "headers" : [ {
        "key" : "Cache-Control",
        "value" : "max-age=604800"
      } ]
    }, {
      "source" : "**/*.@(jpg|jpeg|gif|png|ico)",
      "headers" : [ {
        "key" : "Cache-Control",
        "value" : "max-age=604800"
      } ]
    } ],
    "cleanUrls": true,
    "trailingSlash": false
  }
}







/*  cloud functions
---------------------------------------------------------------------------------- */
