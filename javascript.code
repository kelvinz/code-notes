/*	general
---------------------------------------------------------------------------------- */



//	placeholder







/*	terminology
---------------------------------------------------------------------------------- */



/*	sync vs async
------------------- */

synchronous = one by one in sequence, can only proceed after one finishes
asynchronous = non sequential; next in line can start before previous finishes







/*	promises
---------------------------------------------------------------------------------- */



/*	example
------------------- */

doSomeAsyncTask() {
	return new Promise( ( resolve, reject )=> {
		//	doYourAsyncTask
		if ( yourTasks suceeds ) {
			resolve( //	pass a string or object here optionally )
		} else {
			reject( //	pass a string or object here optionally )
		}
	})
}

doSomeAsyncTask()
.then( ( //	recieve object or string )=> {
	console.log( //	object or string )
})
.catch( ( //	recieve object or string )=> {
	console.log( //	object or string )
})







/*	math
---------------------------------------------------------------------------------- */



Math.floor
//	returns the largest integer less than or equal to a given number

Math.ceil
//	returns the smallest integer greater than or equal to a given number

Math.trunc
//	returns the integer part of a number by removing any fractional digits
//	shorthand ~~

Math.round
//	returns the value of a number rounded to the nearest integer






